load "/home/himanshu/thesis_codes/ExChap4/Q_fnonsplit/is_good_elt.m";
load "/home/himanshu/thesis_codes/ExChap4/Q_fnonsplit/example_new.m";

for i in [1..3] do print ""; end for;

ZZ := Integers();
QQ := Rationals();
P<x> := PolynomialRing(QQ);
f := x*(x^3-107)*(x^3-2*107);
C := HyperellipticCurve(f);
J := Jacobian(C);
SG, SGtoA := TwoSelmerGroup(J);
AtoSG := invert_SGtoA(SGtoA);
A := Codomain(SGtoA);
tests := goodness_tests(SGtoA);
elt1 := -21/22898*A.1^6 + 1/107*A.1^5 - 2/107*A.1^4 + 21/214*A.1^3 - A.1^2 + 2*A.1 + 1;


elt2 := 11/22898*A.1^6 - 2/107*A.1^4 - 11/214*A.1^3 + 2*A.1 + 1;

//Factorization(f);
print "elt1 := ", elt1;
print "";
print "elt2 := ", elt2;

print "";

printf "elt1 corresponds to the tuple %o in representation of Etale algebra as product of fields", <Evaluate(elt1,x) mod e[1]: e in Factorization(f)>;
for i in [1..2] do print ""; end for;
printf "elt2 corresponds to the tuple %o in representation of Etale algebra as product of fields",<Evaluate(elt2,x) mod e[1]: e in Factorization(f)>;
print "";

/*
for g in SG do 
[Evaluate(SGtoA(g),x) mod e[1]: e in Factorization(f)];
end for;
*/
print "Is elt1 good?";
print "Ans: ", forall{t: t in tests| t(AtoSG(elt1))};
ctpval := compctp(f, C, SGtoA, J, AtoSG(elt1), [AtoSG(elt2)]);

print "<elt1, elt2>_CT = ", ctpval[1];

print

print "Now consider the curve: y^2 = x*(x^3-97)*(x^3-2*97)"; 
for i in [1..3] do print ""; end for;


f := x*(x^3-97)*(x^3-2*97);
C := HyperellipticCurve(f);
J := Jacobian(C);
SG, SGtoA := TwoSelmerGroup(J);
AtoSG := invert_SGtoA(SGtoA);
A := Codomain(SGtoA);
tests := goodness_tests(SGtoA);

elt1 := 1/9409*A.1^6 - 3/97*A.1^3 + 1;
elt2 := 49/9409*A.1^6 - 1/97*A.1^4 - 146/97*A.1^3 + 2*A.1 + 97;
elt3 := 18/9409*A.1^6 + 1/97*A.1^4 - 37/97*A.1^3 - 2*A.1 + 1;

print "2-Selmer group has F_2 rank 3 and is generated by:";
print "elt1 := ", elt1; 
print "";
print "elt2 := ", elt2; 
print "";
print "elt3 := ", elt3;
print "";



printf "elt1 corresponds to the tuple %o in representation of Etale algebra as product of fields", <Evaluate(elt1,x) mod e[1]: e in Factorization(f)>;
print "";
printf "elt2 corresponds to the tuple %o in representation of Etale algebra as product of fields",<Evaluate(elt2,x) mod e[1]: e in Factorization(f)>; 
print "";
printf "elt3 corresponds to the tuple %o in representation of Etale algebra as product of fields", <Evaluate(elt3,x) mod e[1]: e in Factorization(f)>;

print "";

print "Is elt1 good?";
print "Ans: ", forall{t: t in tests| t(AtoSG(elt1))};
for i in [1..3] do print "";end for;

print "Is elt2 good?"; 
print "Ans: ", forall{t: t in tests| t(AtoSG(elt2))};

print "pairing elt1 with elt2 and elt3 respectively";

ctpval := compctp(f, C, SGtoA, J, AtoSG(elt1), [AtoSG(elt2), AtoSG(elt3)]); 

print "[<elt1, elt2>_CT, <elt1, elt3>_CT] :=", ctpval;

for i in [1..3] do print ""; end for;

print "pairing elt2 with elt3";

ctpval := compctp(f, C, SGtoA, J, AtoSG(elt2), [AtoSG(elt3)]);

print "<elt2, elt3>_CT := ", ctpval[1];

